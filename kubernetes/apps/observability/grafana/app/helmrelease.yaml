apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 1h
  chart:
    spec:
      chart: grafana
      version: 8.5.11
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    env:
      - name: GF_DATABASE_USER
        value: grafana_user
      - name: GF_DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            name: grafana-db-secret
            key: GF_PASSWORD
    rbac:
      create: true
    replicas: 1
    automountServiceAccountToken: true
    deploymentStrategy:
      type: RollingUpdate

    readinessProbe:
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 120
      timeoutSeconds: 30
      periodSeconds: 20
      failureThreshold: 10

    livenessProbe:
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 120
      timeoutSeconds: 30
      failureThreshold: 10

    image:
      registry: docker.io
      repository: grafana/grafana
      tag: "11.2.3"
      pullPolicy: IfNotPresent

    createConfigmap: true
    service:
      enabled: true
      type: ClusterIP
      port: 80
      targetPort: 3000
      portName: service

    serviceMonitor:
      enabled: true
      path: /metrics
      interval: 30s
      scrapeTimeout: 30s

    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        kubernetes.io/ingress.class: internal
        kubernetes.io/tls-acme: "true"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      path: /
      pathType: Prefix
      tls:
        - secretName: grafana-tls
          hosts:
            - "grafana.${SECRET_DOMAIN}"

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

    persistence:
      type: pvc
      enabled: true
      storageClassName: "openebs-hostpath"
      accessModes:
        - ReadWriteOnce
      size: 10Gi
      finalizers:
        - kubernetes.io/pvc-protection
      lookupVolumeName: true

    adminUser: admin
    admin:
      existingSecret: grafana-admin-secret
      userKey: admin-user
      passwordKey: admin-password

    notifiers: {}
    grafana.ini:
      #database:
      #  type: postgres
      #  host: grafana-db-service.observability.svc.cluster.local:5432
      #  name: grafana
      #  user: grafana_user
      #  password: "${GF_DATABASE_PASSWORD}"
      paths:
        data: /var/lib/grafana/
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: true
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      server:
        domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}"

    revisionHistoryLimit: 10
